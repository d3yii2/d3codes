<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace d3yii2\d3codes\models\base;


/**
 * This is the base-model class for table "d3codes_code_record".
 *
 * @property string $id
 * @property integer $code_id
 * @property integer $series_id
 * @property integer $model_id
 * @property string $model_record_id
 * @property string $sqn
 * @property string $full_code
 *
 * @property \d3yii2\d3codes\models\D3codesCode $code
 * @property \d3yii2\d3codes\models\SysModels $model
 * @property \d3yii2\d3codes\models\D3codesSeries $series
 * @property string $aliasModel
 */
abstract class D3CodesCodeRecord extends \yii\db\ActiveRecord
{



    /**
     * @inheritdoc
     */
    public static function tableName(): string
    {
        return 'd3codes_code_record';
    }



    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            'tinyint Unsigned' => [['code_id','series_id','model_id'],'integer' ,'min' => 0 ,'max' => 255],
            'integer Unsigned' => [['id','model_record_id','sqn'],'integer' ,'min' => 0 ,'max' => 4294967295],
            [['code_id', 'series_id', 'model_id', 'model_record_id', 'sqn', 'full_code'], 'required'],
            [['full_code'], 'string', 'max' => 50],
            [['code_id'], 'exist', 'skipOnError' => true, 'targetClass' => \d3yii2\d3codes\models\D3codesCode::className(), 'targetAttribute' => ['code_id' => 'id']],
            [['model_id'], 'exist', 'skipOnError' => true, 'targetClass' => \d3yii2\d3codes\models\SysModels::className(), 'targetAttribute' => ['model_id' => 'id']],
            [['series_id'], 'exist', 'skipOnError' => true, 'targetClass' => \d3yii2\d3codes\models\D3codesSeries::className(), 'targetAttribute' => ['series_id' => 'id']]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'code_id' => 'Code ID',
            'series_id' => 'Series ID',
            'model_id' => 'Model ID',
            'model_record_id' => 'Model Record ID',
            'sqn' => 'Sqn',
            'full_code' => 'Full Code',
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getCode()
    {
        return $this->hasOne(\d3yii2\d3codes\models\D3codesCode::className(), ['id' => 'code_id'])->inverseOf('d3codesCodeRecords');
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getModel()
    {
        return $this->hasOne(\d3yii2\d3codes\models\SysModels::className(), ['id' => 'model_id'])->inverseOf('d3codesCodeRecords');
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getSeries()
    {
        return $this->hasOne(\d3yii2\d3codes\models\D3codesSeries::className(), ['id' => 'series_id'])->inverseOf('d3codesCodeRecords');
    }

}
